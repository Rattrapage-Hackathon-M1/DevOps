upstream auth {
  server auth:8080;
}

upstream utilisateur {
  server api-crud:8080;
}

upstream tache {
  server api-crud:8080;
}

server {
  listen 80;
  server_name 127.0.0.1;
  error_page 404 = @400;
  default_type application/json;

  location @400 {
    return 400 '{"status":400,"message":"Bad request"}\n';
  }

  # Traitement des requêtes OPTIONS (preflight)
  location / {
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
      add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
      add_header 'Access-Control-Expose-Headers' 'Authorization, Content-Type';
      add_header 'Access-Control-Max-Age' 1728000;
      add_header 'Content-Type' 'text/plain; charset=utf-8';
      add_header 'Content-Length' 0;
      return 204;
    }

    auth_request /auth/verify_token/;

    # Configuration générale CORS pour toutes les autres requêtes
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
    add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
    add_header 'Access-Control-Expose-Headers' 'Authorization, Content-Type' always;

    location /utilisateur/ {
      proxy_pass http://utilisateur/api/utilisateurs/;
    }

    location /tache/ {
      proxy_pass http://tache/api/taches/;
    }
  }

  location /auth/verify_token/ {
    internal;
    proxy_pass http://auth/api/auth/verifytoken;
    auth_request_set $auth_status $upstream_status;
    auth_request_set $auth_body $upstream_http_content_type;
  }

  location /auth/ {
    proxy_pass http://auth/api/auth/;
  }
}
